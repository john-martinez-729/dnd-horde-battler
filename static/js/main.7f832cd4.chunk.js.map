{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","changeStats","e","setState","creatureStats","state","target","name","value","changeParams","parseDamDice","dice","critical","numOfDice","dieSize","modifier","total","damDice","toUpperCase","includes","split","splitA","splitB","splitAgain","parseInt","maxDieRoll","minDieRoll","i","rollDie","validity","min","max","Math","floor","random","handleAddToHorde","numOfCreatures","chosenHorde","newHorde","newCreature","num","length","hp","maxHp","ac","att","push","deleteCreature","horde","correctHordeArr","splice","attack","attHorde","defender","attackingHorde","combatLog","defendingHorde","attacker","indexBeingAttacked","attackRoll","arr","resetHorde","renderCreature","creature","id","currentHp","className","onClick","renderCombatLogEntry","entry","hordeA","hordeB","this","disabledAttackButton","countA","countB","Container","fluid","Row","noGutters","Col","FormControl","onChange","placeholder","type","as","Button","lg","disabled","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAqaeA,E,kDAtYb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkBRC,YAAc,SAAAC,GACZ,EAAKC,SAAS,CACZC,cAAc,2BACT,EAAKC,MAAMD,eADH,kBAEVF,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,WAvBb,EA4BnBC,aAAe,SAAAP,GACb,EAAKC,SAAL,eACGD,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,SA9BX,EAkCnBE,aAAe,SAACC,EAAMC,GACpB,IAAIC,EAAWC,EAASC,EACpBC,EAAQ,EACNC,EAAUN,EAAKO,cAErB,GAAID,EAAQE,SAAS,KAAM,CACzB,IAAMC,EAAQH,EAAQG,MAAM,KACtBC,EAASD,EAAM,GACfE,EAASF,EAAM,GAErB,GAAIE,EAAOH,SAAS,KAAM,CACxB,IAAMI,EAAaD,EAAOF,MAAM,KAChCN,EAAUU,SAASD,EAAW,IAC9BR,EAAWS,SAASD,EAAW,SAC1B,GAAID,EAAOH,SAAS,KAAM,CAC/B,IAAMI,EAAaD,EAAOF,MAAM,KAChCN,EAAUU,SAASD,EAAW,IAC9BR,EAAWS,SAASD,EAAW,SAE/BT,EAAUU,SAASJ,EAAM,IACzBL,EAAW,EAGbF,EAAYW,SAASH,GAEjBT,IACFC,GAAa,GAMf,IAHA,IAAMY,EAAaX,EAAUC,EACvBW,EAAa,EAAIX,EAEdY,EAAI,EAAGA,EAAId,EAAWc,IAC7BX,GAAS,EAAKY,QAAQF,EAAYD,GAGpC,OAAOT,EAEP,EAAKb,SAAS,CACZ0B,UAAU,KAzEG,EA8EnBD,QAAU,SAACE,EAAKC,GACd,OAAOD,EAAME,KAAKC,MAAMD,KAAKE,UAAYH,EAAID,EAAM,KA/ElC,EAkFnBK,iBAAmB,WAKjB,IALwB,IAAD,EACgC,EAAK9B,MAApDD,EADe,EACfA,cAAegC,EADA,EACAA,eAAgBC,EADhB,EACgBA,YACjCC,EAAW,EAAKjC,MAAMgC,GAGnBV,EAAI,EAAGA,EAAIS,EAAgBT,IAAK,CACvC,IAAMY,EAAc,CAClBC,IAAKF,EAASG,OAAS,EACvBC,GAAIlB,SAASpB,EAAcsC,KAAO,EAClCC,MAAOnB,SAASpB,EAAcsC,KAAO,EACrCE,GAAIpB,SAASpB,EAAcwC,KAAO,GAClCC,IAAKrB,SAASpB,EAAcyC,MAAQ,EACpC5B,QAASb,EAAca,SAAW,OAEpCqB,EAASQ,KAAKP,GAGhB,EAAKpC,SAAL,eACG,EAAKE,MAAMgC,YAAcC,KApGX,EAwGnBS,eAAiB,SAACC,EAAOrB,GACvB,IAAMsB,EAAkB,EAAK5C,MAAM2C,GACXC,EAAgBC,OAAOvB,EAAG,GAElD,EAAKxB,SAAL,eACG6C,EAAQC,KA7GM,EAiHnBE,OAAS,SAACC,EAAUC,GAKlB,IAJA,IAAMC,EAAiB,EAAKjD,MAAM+C,GAC5BG,EAAY,EAAKlD,MAAMkD,UACzBC,EAAiB,EAAKnD,MAAMgD,GAEvB1B,EAAI,EAAGA,EAAI2B,EAAeb,OAAQd,IAAK,CAC9C,IAAM8B,EAAWH,EAAe3B,GAChC,GAAI8B,EAASf,GAAK,EAAG,CACnB,IAAIgB,EAAqB1B,KAAKC,MAAOD,KAAKE,SAAWsB,EAAef,QAChEe,EAAeE,GAAoBhB,IAAM,IAC3CgB,EAAqB1B,KAAKC,MAAOD,KAAKE,SAAWsB,EAAef,SAGlE,IAAMY,EAAWG,EAAeE,GAE1BC,EAAa,EAAK/B,QAAQ,EAAI6B,EAASZ,IAAK,GAAKY,EAASZ,KAEhE,GAAIc,EAAaF,EAASZ,KAAO,GAAI,CACnC,IAAM7B,EAAQ,EAAKN,aAAa4C,EAAe3B,GAAGV,QAAS,YAC3DsC,EAAUT,KAAV,WAAmBW,EAASjB,IAA5B,iBAAwCY,EAAxC,qBAA6DC,EAASb,IAAtE,oCAAqGmB,EAArG,sBAA6H3C,EAA7H,mBACK,GAAI2C,GAAcN,EAAST,GAAI,CAAC,IAAD,EAC9B5B,EAAQ,EAAKN,aAAa4C,EAAe3B,GAAGV,SAClDuC,EAAeE,GAAoBhB,IAAM1B,EACzCuC,EAAUT,KAAV,WAAmBW,EAASjB,IAA5B,iBAAwCY,EAAxC,qBAA6DC,EAASb,IAAtE,sBAAuFmB,EAAvF,sBAA+G3C,EAA/G,aAEA,EAAKb,UAAL,mBACGkD,EADH,2BAEO,EAAKhD,MAAMgD,IAFlB,IAGIO,IAAKJ,KAHT,0BAKaD,GALb,SAQAA,EAAUT,KAAV,WAAmBW,EAASjB,IAA5B,iBAAwCY,EAAxC,qBAA6DC,EAASb,IAAtE,wBAAyFmB,EAAzF,OACA,EAAKxD,SAAS,CACZoD,UAAWA,OApJF,EA2JnBM,WAAa,SAAAb,GACX,EAAK7C,SAAL,eACG6C,EAAQ,MA7JM,EAiKnBc,eAAiB,SAACC,EAAUf,EAAOrB,GAAO,IAIpCqC,EAHIrB,EAAmBoB,EAAnBpB,MAAOD,EAAYqB,EAAZrB,GAAIF,EAAQuB,EAARvB,IACfyB,EAAYvB,EAAK,EAAIA,EAAK,EAa9B,OATEsB,EADe,GAAbC,EACG,OACIA,EAAYtB,GAASsB,EAAYtB,EAAQ,EAC7C,UACIsB,GAAatB,EAAQ,EACzB,WAEA,SAIL,sBAA+CuB,UAAU,qBAAqBF,GAAIA,EAAlF,UACE,cAAC,IAAD,CAAiBE,UAAU,cAAcC,QAAS,kBAAM,EAAKpB,eAAeC,EAAOrB,MACnF,sBAAKuC,UAAU,uBAAf,cAAwC1B,KACxC,cAAC,IAAD,CAAc0B,UAAU,UACxB,sBAAKA,UAAU,OAAf,UACGD,EADH,MACiBtB,OALnB,6BAAgCK,EAAhC,aAA0CrB,KAjL3B,EA4LnByC,qBAAuB,SAACC,EAAO1C,GAC7B,OACE,sBAAkCuC,UAAU,QAA5C,2BACavC,EAAI,EADjB,KAEE,qBAAKuC,UAAU,OAAf,SAAuBG,MAFzB,0BAA6B1C,KA3L/B,EAAKtB,MAAQ,CACXD,cAAe,CACbsC,GATY,EAUZE,GATY,GAUZC,IAAK,EACL5B,QAAS,GACTY,UAAU,GAEZyC,OAAQ,GACRC,OAAQ,GACRhB,UAAW,GACXnB,eAAgB,EAChBC,YAAa,IAfE,E,qDA2MjB,IANQ,IAAD,SAC0BmC,KAAKnE,MAAMD,cAApCsC,EADD,EACCA,GAAIE,EADL,EACKA,GAAIC,EADT,EACSA,IAAK5B,EADd,EACcA,QAEjBwD,GAAuB,EACvBC,EAAS,EACTC,EAAS,EACJhD,EAAI,EAAGA,EAAI6C,KAAKnE,MAAMiE,OAAO7B,OAAQd,IACb,GAA3B6C,KAAKnE,MAAMiE,OAAO3C,GAAGe,IACvBgC,IAIJ,IAAK,IAAI/C,EAAI,EAAGA,EAAI6C,KAAKnE,MAAMkE,OAAO9B,OAAQd,IACb,GAA3B6C,KAAKnE,MAAMkE,OAAO5C,GAAGe,IACvBiC,IAaJ,OARED,GAAUF,KAAKnE,MAAMiE,OAAO7B,QACzBkC,GAAUH,KAAKnE,MAAMkE,OAAO9B,QACA,GAA5B+B,KAAKnE,MAAMiE,OAAO7B,QACU,GAA5B+B,KAAKnE,MAAMkE,OAAO9B,SAErBgC,GAAuB,GAIvB,eAACG,EAAA,EAAD,CAAWV,UAAU,MAAMW,OAAK,EAAhC,UACE,eAACC,EAAA,EAAD,CAAKC,WAAS,EAACb,UAAU,UAAzB,UACE,eAACc,EAAA,EAAD,CAAKd,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,QAAf,+BAGA,qBAAKA,UAAU,UAAf,qIAOF,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,cAACe,EAAA,EAAD,CACEC,SAAUV,KAAK/D,aACfF,KAAK,iBACLC,MAAOgE,KAAKnE,MAAM+B,eAClB+C,YAAY,oBACZC,KAAK,SAASlB,UAAU,qCAE1B,eAACe,EAAA,EAAD,CACEC,SAAUV,KAAK/D,aACfF,KAAK,cACLC,MAAOgE,KAAKnE,MAAMgC,YAClBgD,GAAG,SAASnB,UAAU,4BAJxB,UAKE,wBAAQ1D,MAAM,GAAd,+BACA,wBAAQA,MAAM,SAAd,qBACA,wBAAQA,MAAM,SAAd,wBAGF,eAAC8E,EAAA,EAAD,CACEnB,QAAS,kBAAM,EAAKhC,iBAAiB,WACrC+B,UAAU,2BAFZ,UAGE,cAAC,IAAD,IAHF,qBASF,qBAAKA,UAAU,SAAf,4BAEA,eAACY,EAAA,EAAD,CAAKC,WAAS,EAAd,UACE,eAACC,EAAA,EAAD,CAAKO,GAAI,EAAGrB,UAAU,yBAAtB,UACE,kCACE,cAAC,IAAD,CAAUA,UAAU,eADtB,QAIA,cAACe,EAAA,EAAD,CACEC,SAAUV,KAAKvE,YACfM,KAAK,KACLC,MAAOkC,EACP0C,KAAK,cAGT,eAACJ,EAAA,EAAD,CAAKO,GAAI,EAAGrB,UAAU,yBAAtB,UACE,kCACE,cAAC,IAAD,CAAiBA,UAAU,eAD7B,QAIA,cAACe,EAAA,EAAD,CACEC,SAAUV,KAAKvE,YACfM,KAAK,KACLC,MAAOoC,EACPwC,KAAK,cAGT,eAACJ,EAAA,EAAD,CAAKO,GAAI,EAAGrB,UAAU,yBAAtB,UACE,kCACE,cAAC,IAAD,CAAiBA,UAAU,eAD7B,kBAIA,cAACe,EAAA,EAAD,CACEC,SAAUV,KAAKvE,YACfM,KAAK,MACLC,MAAOqC,EACPuC,KAAK,cAGT,eAACJ,EAAA,EAAD,CAAKO,GAAI,EAAGrB,UAAU,yBAAtB,UACE,kCACE,cAAC,IAAD,CAAuBA,UAAU,eADnC,YAIA,cAACe,EAAA,EAAD,CACEC,SAAUV,KAAKvE,YACfM,KAAK,UACL4E,YAAY,mBACZ3E,MAAOS,gBAMjB,eAAC+D,EAAA,EAAD,CAAKd,UAAU,UAAf,UACE,sBAAKA,UAAU,iCAAf,UAEE,eAACoB,EAAA,EAAD,CACEE,SAAUf,EACVN,QAAS,kBAAM,EAAKhB,OAAO,SAAU,WACrCe,UAAU,8BAHZ,UAIE,cAAC,IAAD,IAJF,aAQA,cAAC,IAAD,CAAeC,QAAS,kBAAM,EAAKN,WAAW,WAAWK,UAAU,eAEnE,sBAAKA,UAAU,SAAf,sBAEIM,KAAKnE,MAAMiE,OAAO7B,OAFtB,OAIA,cAACqC,EAAA,EAAD,CAAKC,WAAS,EAAd,SAEIP,KAAKnE,MAAMiE,OAAOmB,KAAI,SAAC1B,EAAUpC,GAAX,OAAiB,EAAKmC,eAAeC,EAAU,SAAUpC,WAKrF,sBAAKuC,UAAU,iCAAf,UACE,eAACoB,EAAA,EAAD,CACEE,SAAUf,EACVN,QAAS,kBAAM,EAAKhB,OAAO,SAAU,WACrCe,UAAU,8BAHZ,UAIE,cAAC,IAAD,IAJF,aAQA,cAAC,IAAD,CAAeC,QAAS,kBAAM,EAAKN,WAAW,WAAWK,UAAU,eAEnE,sBAAKA,UAAU,SAAf,sBAEIM,KAAKnE,MAAMkE,OAAO9B,OAFtB,OAIA,cAACqC,EAAA,EAAD,CAAKC,WAAS,EAAd,SAEIP,KAAKnE,MAAMkE,OAAOkB,KAAI,SAAC1B,EAAUpC,GAAX,OAAiB,EAAKmC,eAAeC,EAAU,SAAUpC,WAKrF,sBAAKuC,UAAU,sCAAf,UACE,qBAAKA,UAAU,SAAf,wBAIA,qBAAKA,UAAU,aAAf,SAEIM,KAAKnE,MAAMkD,UAAUkC,KAAI,SAACpB,EAAO1C,GAAR,OAAc,EAAKyC,qBAAqBC,EAAO1C,iBAOlF,cAACmD,EAAA,EAAD,CAAKC,WAAS,EAACb,UAAU,aAAzB,6C,GA9XUwB,aClBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7f832cd4.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Container,\n  Col,\n  Row,\n  FormControl,\n  Button\n} from 'react-bootstrap'\nimport {\n  GiCheckedShield,\n  GiSwordBrandish,\n  GiHearts,\n  GiDiceEightFacesEight,\n  GiDeathSkull,\n} from 'react-icons/gi'\nimport {\n  AiOutlineUndo,\n  AiOutlineDelete,\n  AiOutlineQuestionCircle,\n  AiOutlinePlus\n} from 'react-icons/ai'\n\n\nconst MAX_DAM_DICE = 12\nconst DICE_OPTIONS = [4, 6, 8, 10, 12, 20]\nconst STARTING_HP = 1\nconst STARTING_AC = 10\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      creatureStats: {\n        hp: STARTING_HP,\n        ac: STARTING_AC,\n        att: 0,\n        damDice: '',\n        validity: true,\n      },\n      hordeA: [],\n      hordeB: [],\n      combatLog: [],\n      numOfCreatures: 1,\n      chosenHorde: '',\n    }\n  }\n\n  changeStats = e => {\n    this.setState({\n      creatureStats: {\n        ...this.state.creatureStats,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  changeParams = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  parseDamDice = (dice, critical) => {\n    let numOfDice, dieSize, modifier\n    let total = 0\n    const damDice = dice.toUpperCase()\n\n    if (damDice.includes('D')) {\n      const split = damDice.split('D')\n      const splitA = split[0]\n      const splitB = split[1]\n\n      if (splitB.includes('+')) {\n        const splitAgain = splitB.split('+')\n        dieSize = parseInt(splitAgain[0])\n        modifier = parseInt(splitAgain[1])\n      } else if (splitB.includes('-')) {\n        const splitAgain = splitB.split('-')\n        dieSize = parseInt(splitAgain[0])\n        modifier = parseInt(splitAgain[1])\n      } else {\n        dieSize = parseInt(split[1])\n        modifier = 0\n      }\n\n      numOfDice = parseInt(splitA)\n\n      if (critical) {\n        numOfDice *= 2\n      }\n\n      const maxDieRoll = dieSize + modifier\n      const minDieRoll = 1 + modifier\n\n      for (var i = 0; i < numOfDice; i++) { //Loop a number of times equal to the number of dice\n        total += this.rollDie(minDieRoll, maxDieRoll)\n      }\n\n      return total\n    } else {\n      this.setState({\n        validity: false\n      })\n    }\n  }\n\n  rollDie = (min, max) => {\n    return min + Math.floor(Math.random() * (max-min + 1))\n  }\n\n  handleAddToHorde = () => {\n    const { creatureStats, numOfCreatures, chosenHorde } = this.state\n    const newHorde = this.state[chosenHorde]\n\n\n    for (let i = 0; i < numOfCreatures; i++) {\n      const newCreature = {\n        num: newHorde.length + 1,\n        hp: parseInt(creatureStats.hp) || 1,\n        maxHp: parseInt(creatureStats.hp) || 1,\n        ac: parseInt(creatureStats.ac) || 10,\n        att: parseInt(creatureStats.att) || 0,\n        damDice: creatureStats.damDice || '1d1'\n      }\n      newHorde.push(newCreature)\n    }\n\n    this.setState({\n      [this.state.chosenHorde]: newHorde\n    })\n  }\n\n  deleteCreature = (horde, i) => {\n    const correctHordeArr = this.state[horde]\n    const deletedCreature = correctHordeArr.splice(i, 1)\n\n    this.setState({\n      [horde]: correctHordeArr\n    })\n  }\n\n  attack = (attHorde, defender) => {\n    const attackingHorde = this.state[attHorde]\n    const combatLog = this.state.combatLog\n    let defendingHorde = this.state[defender]\n\n    for (let i = 0; i < attackingHorde.length; i++) {\n      const attacker = attackingHorde[i]\n      if (attacker.hp > 0) {\n        let indexBeingAttacked = Math.floor((Math.random() * defendingHorde.length))\n        if (defendingHorde[indexBeingAttacked].hp <= 0) {\n          indexBeingAttacked = Math.floor((Math.random() * defendingHorde.length))\n        }\n\n        const defender = defendingHorde[indexBeingAttacked]\n\n        const attackRoll = this.rollDie(1 + attacker.att, 20 + attacker.att)\n\n        if (attackRoll - attacker.att == 20) {\n          const total = this.parseDamDice(attackingHorde[i].damDice, 'critical')\n          combatLog.push(`#${attacker.num} from ${attHorde} attacks #${defender.num} scoring a critical hit (${attackRoll}), dealing ${total} damage!!`)\n        } else if (attackRoll >= defender.ac) {\n          const total = this.parseDamDice(attackingHorde[i].damDice)\n          defendingHorde[indexBeingAttacked].hp -= total\n          combatLog.push(`#${attacker.num} from ${attHorde} attacks #${defender.num} and hits (${attackRoll}), dealing ${total} damage!`)\n\n          this.setState({\n            [defender]: {\n              ...this.state[defender],\n              arr: defendingHorde\n            },\n            combatLog: combatLog\n          })\n        } else {\n          combatLog.push(`#${attacker.num} from ${attHorde} attacks #${defender.num} and misses (${attackRoll}).`)\n          this.setState({\n            combatLog: combatLog\n          })\n        }\n      }\n    }\n  }\n\n  resetHorde = horde => {\n    this.setState({\n      [horde]: []\n    })\n  }\n\n  renderCreature = (creature, horde, i) => {\n    const { maxHp, hp, num } = creature\n    let currentHp = hp > 0 ? hp : 0\n\n    let id\n    if (currentHp == 0) {\n      id = 'dead'\n    } else if (currentHp < maxHp && currentHp > maxHp / 2) {\n      id = 'damaged'\n    } else if (currentHp <= maxHp / 2) {\n      id = 'bloodied'\n    } else {\n      id = 'normal'\n    }\n\n    return (\n      <div key={`creatureContainer; ${horde}: ${i}`} className='creature-container' id={id}>\n        <AiOutlineDelete className='delete-icon' onClick={() => this.deleteCreature(horde, i)} />\n        <div className='creature-designation'>#{num}</div>\n        <GiDeathSkull className='skull'/>\n        <div className='data'>\n          {currentHp} / {maxHp}\n        </div>\n      </div>\n    )\n  }\n\n  renderCombatLogEntry = (entry, i) => {\n    return (\n      <div key={`combatLogEntry: ${i}`} className='entry'>\n        {`Entry #${i + 1}.`}\n        <div className='text'>{entry}</div>\n      </div>\n    )\n  }\n\n  render() {\n    const { hp, ac, att, damDice } = this.state.creatureStats\n\n    let disabledAttackButton = false\n    let countA = 0\n    let countB = 0\n    for (let i = 0; i < this.state.hordeA.length; i++) {\n      if (this.state.hordeA[i].hp == 0) {\n        countA++\n      }\n    }\n\n    for (let i = 0; i < this.state.hordeB.length; i++) {\n      if (this.state.hordeB[i].hp == 0) {\n        countB++\n      }\n    }\n\n    if (\n      countA == this.state.hordeA.length\n      || countB == this.state.hordeB.length\n      || this.state.hordeA.length == 0\n      || this.state.hordeB.length == 0\n    ) {\n      disabledAttackButton = true\n    }\n\n    return (\n      <Container className='App' fluid>\n        <Row noGutters className='top-row'>\n          <Col className='top-col divider'>\n            <div className='title-content'>\n              <div className='title'>\n                D&D Horde Battler\n              </div>\n              <div className='subtext'>\n                This program utilizes basic d20 rules to\n                determine the outcome of a pitched battle between two groups of\n                combatants.\n              </div>\n            </div>\n\n            <div className='horde-data-div'>\n              <div className='creature-input-container'>\n                <FormControl\n                  onChange={this.changeParams}\n                  name='numOfCreatures'\n                  value={this.state.numOfCreatures}\n                  placeholder='# of creatures...'\n                  type='number' className='number-of-creatures-form-control' />\n\n                <FormControl\n                  onChange={this.changeParams}\n                  name='chosenHorde'\n                  value={this.state.chosenHorde}\n                  as='select' className='select-horde-form-control'>\n                  <option value=''>Select a horde...</option>\n                  <option value='hordeA'>Horde A</option>\n                  <option value='hordeB'>Horde B</option>\n                </FormControl>\n\n                <Button\n                  onClick={() => this.handleAddToHorde('hordeA')}\n                  className='common-button add-button'>\n                  <AiOutlinePlus />\n                  Add to Horde\n                </Button>\n              </div>\n\n\n              <div className='header'>Creature Stats</div>\n\n              <Row noGutters>\n                <Col lg={4} className='form-control-container'>\n                  <label>\n                    <GiHearts className='label-icon'/>\n                    HP\n                  </label>\n                  <FormControl\n                    onChange={this.changeStats}\n                    name='hp'\n                    value={hp}\n                    type='number' />\n                </Col>\n\n                <Col lg={4} className='form-control-container'>\n                  <label>\n                    <GiCheckedShield className='label-icon'/>\n                    AC\n                  </label>\n                  <FormControl\n                    onChange={this.changeStats}\n                    name='ac'\n                    value={ac}\n                    type='number' />\n                </Col>\n\n                <Col lg={4} className='form-control-container'>\n                  <label>\n                    <GiSwordBrandish className='label-icon'/>\n                    Attack Bonus\n                  </label>\n                  <FormControl\n                    onChange={this.changeStats}\n                    name='att'\n                    value={att}\n                    type='number' />\n                </Col>\n\n                <Col lg={4} className='form-control-container'>\n                  <label>\n                    <GiDiceEightFacesEight className='label-icon'/>\n                    Damage\n                  </label>\n                  <FormControl\n                    onChange={this.changeStats}\n                    name='damDice'\n                    placeholder='Ex. 1d8+2; 3d6+4'\n                    value={damDice} />\n                </Col>\n\n              </Row>\n            </div>\n          </Col>\n          <Col className='top-col'>\n            <div className='horde-data-div horde-container'>\n\n              <Button\n                disabled={disabledAttackButton}\n                onClick={() => this.attack('hordeA', 'hordeB')}\n                className='common-button attack-button'>\n                <GiSwordBrandish />\n                Attack!\n              </Button>\n\n              <AiOutlineUndo onClick={() => this.resetHorde('hordeA')} className='reset-icon'/>\n\n              <div className='header'>\n                Horde A\n                ({this.state.hordeA.length})\n              </div>\n              <Row noGutters>\n                {\n                  this.state.hordeA.map((creature, i) => this.renderCreature(creature, 'hordeA', i))\n                }\n              </Row>\n            </div>\n\n            <div className='horde-data-div horde-container'>\n              <Button\n                disabled={disabledAttackButton}\n                onClick={() => this.attack('hordeB', 'hordeA')}\n                className='common-button attack-button'>\n                <GiSwordBrandish />\n                Attack!\n              </Button>\n\n              <AiOutlineUndo onClick={() => this.resetHorde('hordeB')} className='reset-icon'/>\n\n              <div className='header'>\n                Horde B\n                ({this.state.hordeB.length})\n              </div>\n              <Row noGutters>\n                {\n                  this.state.hordeB.map((creature, i) => this.renderCreature(creature, 'hordeB', i))\n                }\n              </Row>\n            </div>\n\n            <div className='horde-data-div combat-log-container'>\n              <div className='header'>\n                Combat Log\n              </div>\n\n              <div className='combat-log'>\n                {\n                  this.state.combatLog.map((entry, i) => this.renderCombatLogEntry(entry, i))\n                }\n              </div>\n            </div>\n          </Col>\n        </Row>\n\n        <Row noGutters className='footer-row'>\n          Written by John Martinez\n        </Row>\n      </Container>\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
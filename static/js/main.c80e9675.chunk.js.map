{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","changeStats","e","setState","creatureStats","state","target","name","value","changeParams","parseDamDice","dice","critical","numOfDice","dieSize","modifier","total","damDice","toUpperCase","includes","split","splitA","splitB","splitAgain","parseInt","maxDieRoll","minDieRoll","i","rollDie","validity","min","max","Math","floor","random","handleAddToHorde","numOfCreatures","chosenHorde","newHorde","newCreature","num","length","hp","maxHp","ac","att","push","deleteCreature","horde","correctHordeArr","splice","attack","attHorde","defender","attackingHorde","combatLog","defendingHorde","attacker","indexBeingAttacked","attackRoll","arr","resetHorde","renderCreature","creature","id","currentHp","className","onClick","renderCombatLogEntry","entry","disabledAttackBtn","disabled","countA","countB","hordeA","hordeB","header","FormControl","onChange","placeholder","type","as","Button","Row","noGutters","Col","lg","remaining","reduce","acc","cur","map","footer","href","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c80e9675.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Col, Row, FormControl, Button } from \"react-bootstrap\";\nimport {\n  GiCheckedShield,\n  GiSwordBrandish,\n  GiHearts,\n  GiDiceEightFacesEight,\n  GiDeathSkull,\n} from \"react-icons/gi\";\nimport {\n  AiOutlineUndo,\n  AiOutlineDelete,\n  AiOutlineQuestionCircle,\n  AiOutlinePlus,\n} from \"react-icons/ai\";\n\nconst MAX_DAM_DICE = 12;\nconst DICE_OPTIONS = [4, 6, 8, 10, 12, 20];\nconst STARTING_HP = 1;\nconst STARTING_AC = 10;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      creatureStats: {\n        hp: STARTING_HP,\n        ac: STARTING_AC,\n        att: 0,\n        damDice: \"\",\n        validity: true,\n      },\n      hordeA: [],\n      hordeB: [],\n      combatLog: [],\n      numOfCreatures: 1,\n      chosenHorde: \"\",\n    };\n  }\n\n  changeStats = (e) => {\n    this.setState({\n      creatureStats: {\n        ...this.state.creatureStats,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  changeParams = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  parseDamDice = (dice, critical) => {\n    let numOfDice, dieSize, modifier;\n    let total = 0;\n    const damDice = dice.toUpperCase();\n\n    if (damDice.includes(\"D\")) {\n      const split = damDice.split(\"D\");\n      const splitA = split[0];\n      const splitB = split[1];\n\n      if (splitB.includes(\"+\")) {\n        const splitAgain = splitB.split(\"+\");\n        dieSize = parseInt(splitAgain[0]);\n        modifier = parseInt(splitAgain[1]);\n      } else if (splitB.includes(\"-\")) {\n        const splitAgain = splitB.split(\"-\");\n        dieSize = parseInt(splitAgain[0]);\n        modifier = parseInt(splitAgain[1]);\n      } else {\n        dieSize = parseInt(split[1]);\n        modifier = 0;\n      }\n\n      numOfDice = parseInt(splitA);\n\n      if (critical) {\n        numOfDice *= 2;\n      }\n\n      const maxDieRoll = dieSize + modifier;\n      const minDieRoll = 1 + modifier;\n\n      for (var i = 0; i < numOfDice; i++) {\n        //Loop a number of times equal to the number of dice\n        total += this.rollDie(minDieRoll, maxDieRoll);\n      }\n\n      return total;\n    } else {\n      this.setState({\n        validity: false,\n      });\n    }\n  };\n\n  rollDie = (min, max) => {\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  handleAddToHorde = () => {\n    const { creatureStats, numOfCreatures, chosenHorde } = this.state;\n    const newHorde = this.state[chosenHorde];\n\n    for (let i = 0; i < numOfCreatures; i++) {\n      const newCreature = {\n        num: newHorde.length + 1,\n        hp: parseInt(creatureStats.hp) || 1,\n        maxHp: parseInt(creatureStats.hp) || 1,\n        ac: parseInt(creatureStats.ac) || 10,\n        att: parseInt(creatureStats.att) || 0,\n        damDice: creatureStats.damDice || \"1d1\",\n      };\n      newHorde.push(newCreature);\n    }\n\n    this.setState({\n      [this.state.chosenHorde]: newHorde,\n    });\n  };\n\n  deleteCreature = (horde, i) => {\n    const correctHordeArr = this.state[horde];\n    const deletedCreature = correctHordeArr.splice(i, 1);\n\n    this.setState({\n      [horde]: correctHordeArr,\n    });\n  };\n\n  attack = (attHorde, defender) => {\n    const attackingHorde = this.state[attHorde];\n    const combatLog = this.state.combatLog;\n    let defendingHorde = this.state[defender];\n\n    for (let i = 0; i < attackingHorde.length; i++) {\n      const attacker = attackingHorde[i];\n      if (attacker.hp > 0) {\n        let indexBeingAttacked = Math.floor(\n          Math.random() * defendingHorde.length\n        );\n        if (defendingHorde[indexBeingAttacked].hp <= 0) {\n          indexBeingAttacked = Math.floor(\n            Math.random() * defendingHorde.length\n          );\n        }\n\n        const defender = defendingHorde[indexBeingAttacked];\n\n        const attackRoll = this.rollDie(1 + attacker.att, 20 + attacker.att);\n\n        if (attackRoll - attacker.att == 20) {\n          const total = this.parseDamDice(\n            attackingHorde[i].damDice,\n            \"critical\"\n          );\n          combatLog.push(\n            `#${attacker.num} from ${attHorde} attacks #${defender.num} scoring a critical hit (${attackRoll}), dealing ${total} damage!!`\n          );\n        } else if (attackRoll >= defender.ac) {\n          const total = this.parseDamDice(attackingHorde[i].damDice);\n          defendingHorde[indexBeingAttacked].hp -= total;\n          combatLog.push(\n            `#${attacker.num} from ${attHorde} attacks #${defender.num} and hits (${attackRoll}), dealing ${total} damage!`\n          );\n\n          this.setState({\n            [defender]: {\n              ...this.state[defender],\n              arr: defendingHorde,\n            },\n            combatLog: combatLog,\n          });\n        } else {\n          combatLog.push(\n            `#${attacker.num} from ${attHorde} attacks #${defender.num} and misses (${attackRoll}).`\n          );\n          this.setState({\n            combatLog: combatLog,\n          });\n        }\n      }\n    }\n  };\n\n  resetHorde = (horde) => {\n    this.setState({\n      [horde]: [],\n    });\n  };\n\n  renderCreature = (creature, horde, i) => {\n    const { maxHp, hp, num } = creature;\n    let currentHp = hp > 0 ? hp : 0;\n\n    let id;\n    if (currentHp == 0) {\n      id = \"dead\";\n    } else if (currentHp < maxHp && currentHp > maxHp / 2) {\n      id = \"damaged\";\n    } else if (currentHp <= maxHp / 2) {\n      id = \"bloodied\";\n    } else {\n      id = \"normal\";\n    }\n\n    return (\n      <div\n        key={`creatureContainer; ${horde}: ${i}`}\n        className=\"creature-container\"\n        id={id}\n      >\n        <AiOutlineDelete\n          className=\"delete-icon\"\n          onClick={() => this.deleteCreature(horde, i)}\n        />\n        <div className=\"creature-designation\">#{num}</div>\n        <GiDeathSkull className=\"skull\" />\n        <div className=\"data\">\n          {currentHp} / {maxHp}\n        </div>\n      </div>\n    );\n  };\n\n  renderCombatLogEntry = (entry, i) => {\n    return (\n      <div key={`combatLogEntry: ${i}`} className=\"entry\">\n        {`Entry #${i + 1}.`}\n        <div className=\"text\">{entry}</div>\n      </div>\n    );\n  };\n\n  disabledAttackBtn = () => {\n    let disabled = false;\n    let countA = 0;\n    let countB = 0;\n    for (let i = 0; i < this.state.hordeA.length; i++) {\n      if (this.state.hordeA[i].hp == 0) {\n        countA++;\n      }\n    }\n\n    for (let i = 0; i < this.state.hordeB.length; i++) {\n      if (this.state.hordeB[i].hp == 0) {\n        countB++;\n      }\n    }\n\n    if (\n      countA == this.state.hordeA.length ||\n      countB == this.state.hordeB.length ||\n      this.state.hordeA.length == 0 ||\n      this.state.hordeB.length == 0\n    ) {\n      disabled = true;\n    }\n\n    return disabled;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////\n\n  header = () => (\n    <div className=\"title-content\">\n      <div className=\"title\">D&D Horde Battler</div>\n      <div className=\"subtext\">\n        This program utilizes basic d20 rules to determine the outcome of a\n        pitched battle between two groups of combatants.\n      </div>\n    </div>\n  );\n\n  creatureStats = () => {\n    const { hp, ac, att, damDice } = this.state.creatureStats;\n    return (\n      <div className=\"horde-data-div\">\n        <div className=\"creature-input-container\">\n          <FormControl\n            onChange={this.changeParams}\n            name=\"numOfCreatures\"\n            value={this.state.numOfCreatures}\n            placeholder=\"# of creatures...\"\n            type=\"number\"\n            className=\"number-of-creatures-form-control\"\n          />\n\n          <FormControl\n            onChange={this.changeParams}\n            name=\"chosenHorde\"\n            value={this.state.chosenHorde}\n            as=\"select\"\n            className=\"select-horde-form-control\"\n          >\n            <option value=\"\">Select a horde...</option>\n            <option value=\"hordeA\">Horde A</option>\n            <option value=\"hordeB\">Horde B</option>\n          </FormControl>\n\n          <Button\n            onClick={() => this.handleAddToHorde(\"hordeA\")}\n            className=\"common-button add-button\"\n          >\n            <AiOutlinePlus />\n            Add to Horde\n          </Button>\n        </div>\n\n        <div className=\"header\">Creature Stats</div>\n\n        <Row noGutters>\n          <Col lg={4} className=\"form-control-container\">\n            <label>\n              <GiHearts className=\"label-icon\" />\n              HP\n            </label>\n            <FormControl\n              onChange={this.changeStats}\n              name=\"hp\"\n              value={hp}\n              type=\"number\"\n            />\n          </Col>\n\n          <Col lg={4} className=\"form-control-container\">\n            <label>\n              <GiCheckedShield className=\"label-icon\" />\n              AC\n            </label>\n            <FormControl\n              onChange={this.changeStats}\n              name=\"ac\"\n              value={ac}\n              type=\"number\"\n            />\n          </Col>\n\n          <Col lg={4} className=\"form-control-container\">\n            <label>\n              <GiSwordBrandish className=\"label-icon\" />\n              Attack Bonus\n            </label>\n            <FormControl\n              onChange={this.changeStats}\n              name=\"att\"\n              value={att}\n              type=\"number\"\n            />\n          </Col>\n\n          <Col lg={4} className=\"form-control-container\">\n            <label>\n              <GiDiceEightFacesEight className=\"label-icon\" />\n              Damage\n            </label>\n            <FormControl\n              onChange={this.changeStats}\n              name=\"damDice\"\n              placeholder=\"Ex. 1d8+2; 3d6+4\"\n              value={damDice}\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  };\n\n  hordeA = () => {\n    const disabled = this.disabledAttackBtn();\n    const horde = this.state.hordeA;\n    const remaining = horde.reduce((acc, cur) => (cur.hp > 0 ? ++acc : acc), 0);\n    return (\n      <div className=\"horde-data-div horde-container\">\n        <Button\n          disabled={disabled}\n          onClick={() => this.attack(\"hordeA\", \"hordeB\")}\n          className=\"common-button attack-button\"\n        >\n          <GiSwordBrandish />\n          Attack!\n        </Button>\n\n        <AiOutlineUndo\n          onClick={() => this.resetHorde(\"hordeA\")}\n          className=\"reset-icon\"\n        />\n\n        <div className=\"header\">{`Horde A (${remaining}/${horde.length})`}</div>\n        <Row noGutters>\n          {horde.map((creature, i) =>\n            this.renderCreature(creature, \"hordeA\", i)\n          )}\n        </Row>\n      </div>\n    );\n  };\n\n  hordeB = () => {\n    const disabled = this.disabledAttackBtn();\n    const horde = this.state.hordeB;\n    const remaining = horde.reduce((acc, cur) => (cur.hp > 0 ? ++acc : acc), 0);\n    return (\n      <div className=\"horde-data-div horde-container\">\n        <Button\n          disabled={disabled}\n          onClick={() => this.attack(\"hordeB\", \"hordeA\")}\n          className=\"common-button attack-button\"\n        >\n          <GiSwordBrandish />\n          Attack!\n        </Button>\n\n        <AiOutlineUndo\n          onClick={() => this.resetHorde(\"hordeB\")}\n          className=\"reset-icon\"\n        />\n\n        <div className=\"header\">{`Horde B (${remaining}/${horde.length})`}</div>\n        <Row noGutters>\n          {horde.map((creature, i) =>\n            this.renderCreature(creature, \"hordeB\", i)\n          )}\n        </Row>\n      </div>\n    );\n  };\n\n  footer = () => (\n    <div className=\"footer\">\n      Created by{\" \"}\n      <a\n        target=\"_blank\"\n        href=\"https://john-martinez-729.github.io/personal-site/\"\n      >\n        John Martinez\n      </a>\n    </div>\n  );\n\n  combatLog = () => (\n    <div className=\"horde-data-div combat-log-container\">\n      <div className=\"header\">Combat Log</div>\n      <div className=\"combat-log\">\n        {this.state.combatLog.map((entry, i) =>\n          this.renderCombatLogEntry(entry, i)\n        )}\n      </div>\n    </div>\n  );\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Row noGutters className=\"top-row\">\n          <Col lg={6} className=\"top-col divider\">\n            {this.header()}\n            {this.creatureStats()}\n          </Col>\n          <Col lg={6} className=\"top-col\">\n            {this.hordeA()}\n            {this.hordeB()}\n            {this.combatLog()}\n          </Col>\n        </Row>\n        {this.footer()}\n      </div>\n    );\n  }\n}\n\n// {this.header()}\n// {this.creatureStats()}\n//\n// {this.hordeA()}\n// {this.hordeB()}\n// {this.combatLog()}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}